name: Build luci-app-webdroidx

on:
  workflow_dispatch:

jobs:
  build:
    name: Build WebDroidX Package
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        release:
          - master
          - 23.05.5
        arch:
          - x86_64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Build packages
        uses: openwrt/gh-action-sdk@main
        with:
          arch: ${{ matrix.arch }}-${{ matrix.release }}
          packages: luci-app-webdroidx
          index: false
          no_refresh_check: true
          
      - name: Find package files
        run: |
          find . -name "*luci-app-webdroidx*.ipk" -type f
          find . -name "*luci-app-webdroidx*.apk" -type f
          
      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: luci-app-webdroidx-${{ matrix.arch }}-${{ matrix.release }}
          path: |
            **/*luci-app-webdroidx*.ipk
            **/*luci-app-webdroidx*.apk
          if-no-files-found: error

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Get package info
        id: get_info
        run: |
          # Extract version from Makefile
          PKG_VERSION=$(grep "^PKG_VERSION:=" luci-app-webdroidx/Makefile | cut -d'=' -f2)
          PKG_RELEASE=$(grep "^PKG_RELEASE:=" luci-app-webdroidx/Makefile | cut -d'=' -f2)
          FULL_VERSION="${PKG_VERSION}-${PKG_RELEASE}"
          echo "version=$FULL_VERSION" >> $GITHUB_OUTPUT
          echo "pkg_version=$PKG_VERSION" >> $GITHUB_OUTPUT
          echo "pkg_release=$PKG_RELEASE" >> $GITHUB_OUTPUT
          
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          release_tag="${{ steps.get_info.outputs.version }}"
          release_body="# ðŸš€ luci-app-webdroidx for OpenWRT

          ## ðŸ“¦ Release Version: \`${{ steps.get_info.outputs.version }}\`
          
          ### ðŸŒŸ Features:
          - Web-based Android screen mirroring solution
          - Control and view Android devices through web browser
          - LuCI web interface integration for OpenWRT
          - Easy installation and configuration
          
          ### ðŸ“‹ Package Details:
          - Version: ${{ steps.get_info.outputs.pkg_version }}
          - Release: ${{ steps.get_info.outputs.pkg_release }}
          - Architecture: all"
          
          if ! gh release view "$release_tag" >/dev/null 2>&1; then
            gh release create "$release_tag" \
              --title "luci-app-webdroidx v${{ steps.get_info.outputs.version }}" \
              --notes "$release_body"
          fi
          
      - name: Upload packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Upload all files one by one
          find ./artifacts -name "*luci-app-webdroidx*.ipk" -type f -exec gh release upload ${{ steps.get_info.outputs.version }} {} --clobber \;
          find ./artifacts -name "*luci-app-webdroidx*.apk" -type f -exec gh release upload ${{ steps.get_info.outputs.version }} {} --clobber \;


name: Build luci-app-webdroidx

on:
  workflow_dispatch:

jobs:
  build:
    name: Build WebDroidX Package
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        release:
          - master
          - 23.05.5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build packages
        uses: openwrt/gh-action-sdk@main
        with:
          arch: x86_64
          release: ${{ matrix.release }}
          packages: luci-app-webdroidx
          index: false
          no_refresh_check: true

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: luci-app-webdroidx-${{ matrix.release }}
          path: "**/*luci-app-webdroidx*.ipk"
          if-no-files-found: error

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Get package info
        id: get_info
        run: |
          PKG_NAME="luci-app-webdroidx"
          PKG_VERSION="1.0.$(date +'%y%m%d')"
          echo "PKG_NAME=$PKG_NAME" >> $GITHUB_OUTPUT
          echo "version=$PKG_VERSION" >> $GITHUB_OUTPUT

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          release_date=$(date +'%y%m%d')
          release_name="${{ steps.get_info.outputs.PKG_NAME }}-${release_date}"
          release_tag="${{ steps.get_info.outputs.version }}"
          release_body="# ðŸš€ ${{ steps.get_info.outputs.PKG_NAME }} for OpenWRT
          ## ðŸ“¦ Release Version: \`${{ steps.get_info.outputs.version }}\`
          ### ðŸŒŸ Features:
            - WebDroidX functionality for OpenWRT
            - LuCI web interface integration
            - Easy installation and configuration
          > ðŸ”” Always ensure you're using the latest version for the best performance!"
          
          if gh release view "$release_tag" >/dev/null 2>&1; then
            echo "Release $release_tag already exists"
          else
            gh release create "$release_tag" \
              --title "$release_name" \
              --notes "$release_body"
          fi

      - name: Upload packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for ipk_file in $(find ./artifacts -name "*.ipk" -type f); do
            gh release upload ${{ steps.get_info.outputs.version }} "$ipk_file" --clobber
          done

# Copyright (c) 2025 BobbyUnknown
# Licensed under the MIT License.

name: Build luci-app-webdroidx

on:
  workflow_dispatch:

jobs:
  build:
    name: Build WebDroidX Package
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        release:
          - master
          - 23.05.5
        arch:
          - x86_64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Build packages
        uses: openwrt/gh-action-sdk@main
        env:
          ARCH: ${{ matrix.arch }}-${{ matrix.release }}
          PACKAGES: luci-app-webdroidx
          INDEX: 0
          NO_REFRESH_CHECK: 1
          
      - name: Find package files
        run: |
          find . -name "*luci-app-webdroidx*.ipk" -type f
          find . -name "*luci-app-webdroidx*.apk" -type f
          
      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: luci-app-webdroidx-${{ matrix.arch }}-${{ matrix.release }}
          path: |
            **/*luci-app-webdroidx*.ipk
            **/*luci-app-webdroidx*.apk
          if-no-files-found: error

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Get package info
        id: get_info
        run: |
          # Extract version from Makefile
          PKG_VERSION=$(grep "^PKG_VERSION:=" luci-app-webdroidx/Makefile | cut -d'=' -f2)
          PKG_RELEASE=$(grep "^PKG_RELEASE:=" luci-app-webdroidx/Makefile | cut -d'=' -f2)
          FULL_VERSION="${PKG_VERSION}-${PKG_RELEASE}"
          echo "version=$FULL_VERSION" >> $GITHUB_OUTPUT
          echo "pkg_version=$PKG_VERSION" >> $GITHUB_OUTPUT
          echo "pkg_release=$PKG_RELEASE" >> $GITHUB_OUTPUT
          
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          release_tag="${{ steps.get_info.outputs.version }}"
          release_body="# ðŸš€ luci-app-webdroidx for OpenWRT

          ## ðŸ“¦ Release Version: \`${{ steps.get_info.outputs.version }}\`
          
          ### ðŸŒŸ Features:
          - Web-based Android screen mirroring solution
          - Control and view Android devices through web browser
          - LuCI web interface integration for OpenWRT
          - Easy installation and configuration
          
          ### ðŸ“‹ Package Details:
          - Version: ${{ steps.get_info.outputs.pkg_version }}
          - Release: ${{ steps.get_info.outputs.pkg_release }}
          - Architecture: all"
          
          if ! gh release view "$release_tag" >/dev/null 2>&1; then
            gh release create "$release_tag" \
              --title "luci-app-webdroidx v${{ steps.get_info.outputs.version }}" \
              --notes "$release_body"
          fi
          
      - name: Upload packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # List all files for debugging
          echo "=== Files in artifacts directory ==="
          find ./artifacts -name "*luci-app-webdroidx*" -type f | sort
          
          for artifact_dir in ./artifacts/*/; do
            if [ -d "$artifact_dir" ]; then
              dir_name=$(basename "$artifact_dir")
              echo "=== Processing: $dir_name ==="
              
              if [[ "$dir_name" == *"master"* ]]; then
                suffix="snapshot"
              elif [[ "$dir_name" == *"23.05.5"* ]]; then
                suffix="23.05.5"
              else
                suffix="unknown"
              fi
              
              find "$artifact_dir" -name "*luci-app-webdroidx*" -type f | while read file; do
                filename=$(basename "$file")
                
                if [[ "$filename" == *.ipk ]]; then
                  new_name="$filename"
                  echo "Uploading: $file as $new_name (original .ipk name)"
                else
                  new_name="${filename%.*}-${suffix}.${filename##*.}"
                  echo "Uploading: $file as $new_name (with suffix)"
                fi
                
                cp "$file" "$new_name"
                gh release upload ${{ steps.get_info.outputs.version }} "$new_name" --clobber
                rm "$new_name"
              done
            fi
          done

